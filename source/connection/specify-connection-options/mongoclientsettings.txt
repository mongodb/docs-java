.. _mongoclientsettings:
.. _specify-mongoclient-settings:

============================
Specify MongoClient Settings
============================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: java sync, customize, connection, code example

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

In this guide, you can learn about the different settings to control
the behavior of your ``MongoClient``.

The following sections describe commonly used settings:

- :ref:`MongoClient Settings <mcs-settings>`
- :ref:`Server Settings <mcs-server-settings>`

.. _mcs-settings:

MongoClient Settings
--------------------

You can control the behavior of your ``MongoClient`` by creating and passing
in a `MongoClientSettings <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.html>`__
object to the `MongoClients.create() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoClients.html#create(com.mongodb.MongoClientSettings)>`__
method.

To create a ``MongoClientSettings`` object, use the
``MongoClientSettings.builder()`` method and chain methods to specify your
settings. After chaining them, use the ``build()`` method to create the
``MongoClientSettings`` object.

The following table describes the methods you can chain to modify your
connection behavior:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - Method
     - Description

   * - ``addCommandListener()``
     - Adds a listener for :ref:`command events <command-events-java>`.

   * - ``applicationName()``
     - Sets the logical name of the application using the ``MongoClient``.

   * - ``applyConnectionString()``
     - Applies the settings from the given ``ConnectionString`` to the
       builder. If you omit this method, the driver attempts to connect to
       ``localhost``.

   * - ``applyToClusterSettings()``
     - Applies the ``ClusterSettings.Builder`` block and then sets the
       :ref:`cluster settings <mcs-cluster-settings>`.

   * - ``applyToLoggerSettings()``
     - Applies the ``LoggerSettings.Builder`` block and then sets the
       :ref:`logger settings <mcs-logger-settings>`.

   * - ``applyToServerSettings()``
     - Applies the ``ServerSettings.Builder`` block and then sets the
       :ref:`server settings <mcs-server-settings>`.

   * - ``autoEncryptionSettings()``
     - | Sets the :ref:`auto-encryption settings <csfle-fundamentals-automatic-encryption>`.
       |
       | If you omit ``keyVaultClient`` or set
         ``bypassAutomaticEncryption`` to false in your
         ``AutoEncryptionSettings``, the driver creates a separate,
         internal ``MongoClient``.
       |
       | The internal ``MongoClient`` configuration differs from the
         parent ``MongoClient`` by setting the ``minPoolSize`` to  0 and
         omitting the ``AutoEncryptionSettings``.

   * - ``codecRegistry()``
     - Sets the :ref:`codec registry <codecs-codecregistry>`.

   * - ``commandListenerList()``
     - Sets the :ref:`command listeners <command-events-java>`.

   * - ``compressorList()``
     - Sets the :ref:`compressors <java-compression>` to use for compressing
       messages to the server.

   * - ``credential()``
     - Sets the :ref:`credential <java-authentication-mechanisms>`.

   * - ``serverApi()``
     - Sets the :ref:`server API <stable-api-java>` to use when sending
       commands to the server.

   * - ``transportSettings()``
     - Sets `TransportSettings <{+api+}/apidocs/mongodb-driver-core/com/mongodb/connection/TransportSettings.html>`__.

.. _connection-string-example:

Example
~~~~~~~

This example demonstrates specifying a ``ConnectionString``:

.. literalinclude:: /includes/fundamentals/code-snippets/MCSettings.java
   :start-after: begin ConnectionString
   :end-before: end ConnectionString
   :language: java
   :emphasize-lines: 3
   :dedent:

.. note:: Chain Order

   Some options in the settings map to a connection string option.
   If you specify the same options in your settings and connection
   string, the order you chain them determines which option the driver
   uses. The driver uses the **last** setting it reads.

   For example, this snippet contains settings with the following times
   for the driver to connect to an available socket:

   - The connection string specifies within ``2 SECONDS``
   - The :ref:`socket settings <mcs-socket-settings>` specifies within
     ``5 SECONDS``

   .. code-block:: java
      :emphasize-lines: 2,4

      MongoClient mongoClient = MongoClients.create(
         MongoClientSettings.builder().applyConnectionString(new ConnectionString("mongodb+srv://<db_username>:<db_password>@<hostname>:<port>/<auth db>?connectTimeoutMS=2000"))
            .applyToSocketSettings(builder ->
            builder.connectTimeout(5L, SECONDS))
            .build());

   Since the driver reads the socket settings options last, the driver
   expects to connect to an available socket within ``5 SECONDS`` before
   timing out.

.. tip:: Log Your Settings

   To log the ``MongoClient`` instance settings,
   set the ``org.mongodb.driver.client`` named
   logger to the ``INFO`` level.

   To learn more about logging with the {+driver-long+}, see the 
   :ref:`java-fundamentals-logging` guide. 


.. _mcs-logger-settings:

Logger Settings
---------------

Chain the `applyToLoggerSettings() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html#applyToLoggerSettings(com.mongodb.Block)>`__
method to modify the logging behavior of the driver.

The following table describes the methods you can chain to your
settings to modify the logging behavior:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - Method
     - Description

   * - ``maxDocumentLength()``
     - | Sets the maximum document length, in characters, of a single log
         message.
       |
       | **Default**: ``1000``

Example
~~~~~~~

This example specifies that the maximum number of characters for a single log
message is set to ``5000`` characters.

.. literalinclude:: /includes/fundamentals/code-snippets/MCSettings.java
   :start-after: begin LoggerSettings
   :end-before: end LoggerSettings
   :language: java
   :emphasize-lines: 3-4
   :dedent:


