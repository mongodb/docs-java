.. _java-atlas-search:

============
Atlas Search
============

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: full text, text analyzer, meta, pipeline, scoring, Lucene
   :description: Learn about how to use Atlas Search in the {+driver-long+}.

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to
run :atlas:`Atlas Search </atlas-search/>` queries on a collection.
Atlas Search enables you to perform full-text searches on collections
hosted on MongoDB Atlas. Atlas Search indexes specify the behavior of the
search and which fields to index.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``movies`` collection in the ``sample_mflix``
database from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to
create a free MongoDB Atlas cluster and load the sample datasets, see the
:atlas:`Get Started with Atlas </getting-started>` guide. To learn more about
aggregation operations and builders, see the :ref:`java-aggregation` guide. 

Run an Atlas Search Query
-------------------------

This section shows how to create an aggregation pipeline to run an
Atlas Search query on a collection. You can use the ``Aggregates.search()`` builder
method to create a ``$search`` pipeline stage, which specifies the search
criteria. Then, call the ``aggregate()`` method and pass your pipeline as a
parameter.

.. note:: Only Available on Atlas for MongoDB v4.2 and later

   This aggregation pipeline operator is only available for collections hosted
   on :atlas:`MongoDB Atlas </>` clusters running v4.2 or later that are
   covered by an :atlas:`Atlas search index </reference/atlas-search/index-definitions/>`.
   Learn more about the required setup and the functionality of this operator
   from the :ref:`Atlas Search <java-atlas-search>` documentation.

Before running an Atlas Search query, you must create an Atlas Search index
on your collection. To learn how to programmatically create an Atlas Search
index, see the :ref:`java-search-indexes` section in the Indexes guide. 

Atlas Search Example
~~~~~~~~~~~~~~~~~~~~

This example runs an Atlas Search query by performing the
following actions:

- Constructs a ``$search`` stage by using the ``Aggregates.search()`` builder method,
  instructing the driver to query for documents in which the ``title``
  field contains the word ``"Alabama"``

- Constructs a ``$project`` stage by using the ``Aggregates.project()`` builder method,
  instructing the driver to include the ``title`` field in the query results

- Passes the pipeline stages to the ``aggregate()`` method and prints the results

.. io-code-block::
   :copyable:

   .. input:: /includes/AtlasSearch.java
      :start-after: begin-atlas-search
      :end-before: end-atlas-search
      :language: java
      :dedent:

   .. output:: 
      :language: console
      :visible: false

      {"_id": {"$oid": "..."}, "title": "Alabama Moon"}
      {"_id": {"$oid": "..."}, "title": "Crazy in Alabama"}
      {"_id": {"$oid": "..."}, "title": "Sweet Home Alabama"}

.. tip:: Java Driver Atlas Search Examples
    
   To view more examples that use the {+driver-short+} to perform Atlas
   Search queries, see :atlas:`Atlas Search Tutorials </atlas-search/tutorials/>`
   in the Atlas documentation.

Atlas Search Metadata
---------------------

Use the ``searchMeta()`` method to create a
:manual:`$searchMeta </reference/operator/aggregation/searchMeta/>`
pipeline stage which returns only the metadata part of the results from
Atlas full-text search queries.

.. tip:: Only Available on Atlas for MongoDB v4.4.11 and later

   This aggregation pipeline operator is only available
   on :atlas:`MongoDB Atlas </>` clusters running v4.4.11 and later. For a
   detailed list of version availability, see the MongoDB Atlas documentation
   on :atlas:`$searchMeta </atlas-search/query-syntax/#-searchmeta>`.

The following example shows the ``count`` metadata for an Atlas search
aggregation stage:

.. literalinclude:: /includes/fundamentals/code-snippets/builders/AggregateSearchBuilderExample.java
   :start-after: // begin atlasSearchMeta
   :end-before: // end atlasSearchMeta
   :language: java
   :dedent:

Learn more about this helper from the
`searchMeta() API documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/Aggregates.html#searchMeta(com.mongodb.client.model.search.SearchCollector)>`__.

.. _java-atlas-search-helpers:

SearchOperator Helper Methods
-----------------------------

To make building pipeline stages easier, the {+driver-short+} provides helper methods
for the following operations:

.. list-table::
   :widths: 40 60
   :header-rows: 1

   * - Operation
     - Description

   * - :atlas:`autocomplete </atlas-search/autocomplete/>`
     - Performs a search for a word or phrase that contains a sequence of
       characters from an incomplete input string.  

   * - :atlas:`compound </atlas-search/compound/>`
     - Combines two or more operators into a single query. 

   * - :atlas:`equals </atlas-search/equals/>` 
     - Checks whether a field matches a value you specify.
       Maps to the ``equals()`` and ``equalsNull()`` methods

   * - :atlas:`exists </atlas-search/exists/>`
     - Tests if a path to a specified indexed field name exists in a document. 

   * - :atlas:`in </atlas-search/in/>`
     - Performs a search for an array of BSON number, date, boolean, objectId,
       uuid, or string values at the given path and returns documents where the
       value of the field equals any value in the specified array.  

   * - :atlas:`moreLikeThis </atlas-search/moreLikeThis/>`
     - Returns documents similar to input documents.  

   * - :atlas:`near </atlas-search/near/>`
     - Supports querying and scoring numeric, date, and GeoJSON point values. 

   * - :atlas:`phrase </atlas-search/phrase/>`
     - Performs a search for documents containing an ordered sequence of terms
       using the analyzer specified in the index configuration.  

   * - :atlas:`queryString  </atlas-search/queryString/>`
     - Supports querying a combination of indexed fields and values.  

   * - :atlas:`range </atlas-search/range/>` 
     - Supports querying and scoring numeric, date, and string values. 
       Maps to the ``numberRange()`` and ``dateRange()`` methods

   * - :atlas:`regex </atlas-search/regex/>`
     - Interprets the query field as a regular expression.   

   * - :atlas:`text </atlas-search/text/>`
     - Performs a full-text search using the analyzer that you specify in the
       index configuration.  

   * - :atlas:`wildcard </atlas-search/wildcard/>`
     - Enables queries which use special characters in the search string that
       can match any character.  

Example Pipeline Search Stage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note:: Atlas Sample Dataset

   This example uses the MongoDB Atlas sample dataset. Specifically, the
   ``movies`` collection in the ``sample_mflix`` database. You can learn how
   to  set up your own free-tier Atlas cluster and how to load the sample dataset
   in our :ref:`quick start guide <java-get-started>`.

The following code creates a search stage for a pipeline with the following filters:

- Movies in the drama genre
- Movies that include Sylvester Stallone in the cast, accounting for possible misspellings
- Movies made between 1980 and 1989, inclusive
- Movies with titles that begin with the word ``"Rocky"``

.. literalinclude:: /includes/fundamentals/code-snippets/builders/AggregateSearchBuilderExample.java
   :start-after: // begin atlasHelperMethods
   :end-before: // end atlasHelperMethods
   :language: java
   :dedent:

To learn more about the helper methods, see the `SearchOperator Interface API documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/client/model/search/SearchOperator.html>`__.

Additional Information
----------------------

To learn more about Atlas Search, see :atlas:`Atlas Search </atlas-search/>`
in the Atlas documentation.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods mentioned in this guide, see
the following API documentation:

- `MongoCollection.aggregate() <{+driver-api+}/MongoCollection.html#aggregate(java.util.List)>`__
- `Aggregates.search() <{+core-api+}/client/model/Aggregates.html#search(com.mongodb.client.model.search.SearchCollector)>`__
- `Aggregates.project() <{+core-api+}/client/model/Aggregates.html#project(org.bson.conversions.Bson)>`__
- `SearchOperator <{+core-api+}/client/model/search/SearchOperator.html>`__

In this guide, you can learn how to use Atlas Search
in the {+driver-short+}. For more information about Atlas Search and its
benefits, see the :atlas:`Atlas Search </atlas-search/>` guide.

Atlas Search enables advanced search functionality for your applications without any additional management or
separate search system alongside your database. Atlas Search queries take the
form of an :ref:`aggregation pipeline <java-aggregation>` stage.

The following operators:
  
  - ``phrase``
  
  - ``regex``
  
  - ``queryString``
  
  - ``equals``
  
  - ``moreLikeThis``
  
  - ``in``
  
  - ``wildcard``
