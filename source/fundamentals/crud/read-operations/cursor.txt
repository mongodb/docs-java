=========================
Access Data From a Cursor
=========================

.. default-domain:: mongodb

Read operations that return multiple documents do not immediately return
all values matching the query. Because a query can potentially match
large sets of documents, these operations rely upon an object called a
:java-docs:`MongoCursor </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCursor.html>`.

A ``MongoCursor`` fetches documents in batches to reduce both memory
consumption and network bandwidth usage. It can iterate through the
fetched documents and ensures that the cursor closes if there is an
early termination. 

This page uses the ``find()`` method to show how to access data from a
cursor. 

The following shows the ``find()`` method as a cursor:

.. code-block:: java
   :copyable: true
   
   MongoCursor<Document> cursor = collection.find().cursor();

Usage Patterns
--------------

Work with cursors using **cursor paradigms**. Cursor paradigms
allow you to access query results one document at a time, abstracting
away network and caching logic. 

Functional Iteration
~~~~~~~~~~~~~~~~~~~~~

Pass a function to the 
`forEachRemaining() <https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Iterator.html?is-external=true#forEachRemaining(java.util.function.Consumer)>`_ 
method of any cursor to iterate through results in a functional style:

.. literalinclude:: /includes/fundamentals/code-snippets/Cursor.java
   :language: java
   :dedent:
   :start-after: begin forEachRemainingIteration
   :end-before: end forEachRemainingIteration

.. note::

   The ``find()`` method implements the Iterable interface. We often see the
   ``forEach()`` method used to iterate through results:

   .. code-block:: java

      collection.find().forEach(doc -> System.out.println(doc.toJson()));

   Using this method is not preferable because you can't ensure that
   the underlying cursor closes if you stop iterating before exhaustion.


Conditional Iteration
~~~~~~~~~~~~~~~~~~~~~

Use the :java-docs:`hasNext() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCursor.html#hasNext()>`
method to check if there are any documents available in the cursor, and then use the
:java-docs:`next() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCursor.html#next()>`
method to retrieve the next available document from the cursor:

.. literalinclude:: /includes/fundamentals/code-snippets/Cursor.java
   :language: java
   :dedent:
   :start-after: begin manualIteration
   :end-before: end manualIteration

Cursor Cleanup
--------------

Close
~~~~~

Use the
:java-docs:`close() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCursor.html#close()>`
method to free up a cursor's consumption of resources in both the client
application and the MongoDB server:

.. literalinclude:: /includes/fundamentals/code-snippets/Cursor.java
   :language: java
   :dedent:
   :start-after: begin closeExample
   :end-before: end closeExample
   