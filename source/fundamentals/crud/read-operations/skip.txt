=====================
Skip Returned Results
=====================

.. default-domain:: mongodb

Use ``skip()`` to specify how many documents to omit from the beginning
of the list of returned documents for a read operation. You can combine
``skip()`` with ``sort()`` to omit the top (for descending order) or
bottom (for ascending order) results for a given query. Since the order
of documents returned is not guaranteed in the absence of a sort, using
``skip()`` without using ``sort()`` omits arbitrary documents. 

The example in this guide is about a paint store where the best colors
sell quicker than the other colors. One day, a customer comes in and
asks what the 3 best selling colors are.  The following documents are in
the ``paint`` collection: 

.. code-block:: json

   { "_id": 1, "color": "red", "qty": 5 }
   { "_id": 2, "color": "purple", "qty": 10 }
   { "_id": 3, "color": "blue", "qty": 9 }
   { "_id": 4, "color": "white", "qty": 6 }
   { "_id": 5, "color": "yellow", "qty": 11 }
   { "_id": 6, "color": "pink", "qty": 3 }
   { "_id": 7, "color": "green", "qty": 8 }
   { "_id": 8, "color": "orange", "qty": 7 }


To address the scenario, we query the ``paint`` collection with an empty
filter, sort the documents by ``qty`` field and omit the first 5
results.

.. literalinclude:: /includes/fundamentals/code-snippets/Skip.java
   :language: java
   :dedent:
   :start-after: begin skipExample
   :end-before: end skipExample

The following shows the output of the query specified above:

.. code-block:: json
   :copyable: false
   
   { "_id": 4, "color": "white", "qty": 6 }
   { "_id": 1, "color": "red", "qty": 5 }
   { "_id": 6, "color": "pink", "qty": 3 }

To answer the customer, the 3 best selling colors are: pink, red, and
white.

.. _note: 
    If the value of skip exceeds the number of matched documents for a
    query, that query returns no documents.
    

