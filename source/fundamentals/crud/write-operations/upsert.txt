======================================
Insert or Update in a Single Operation
======================================

.. default-domain:: mongodb

Overview
--------

You can insert or update documents by passing a query filter to the 
:java-docs:`updateOne() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.UpdateOptions)>`, 
:java-docs:`updateMany() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#updateMany(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.UpdateOptions)>`
or :java-docs:`replaceOne() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#replaceOne(org.bson.conversions.Bson,TDocument,com.mongodb.client.model.ReplaceOptions)>` methods

Each method returns an ``AcknowledgedUpdateResult`` that tells us:

- The number of documents that matched the query filter
- The number of documents that got modified 
- The ``_id`` of the document that got upserted 

These methods update documents that match your query filter, but
inserts a document if the there are no matches when you set the upsert
to true.  

In the case there are multiple matches in your query filter for
``updateOne()`` or ``replaceOne()``, the method will update the first
occurrence of a match in the collection.

Set an upsert:
~~~~~~~~~~~~~~

Use :java-docs:`UpdateOptions </apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateOptions.html>`
as a third parameter to the ``updateOne()`` and ``updateMany()``
methods.

Use :java-docs:`ReplaceOptions </apidocs/mongodb-driver-core/com/mongodb/client/model/ReplaceOptions.html>`
as a third parameter to the ``replaceOne()`` method.

Example
~~~~~~~

The following example is about a paint store that sells eight different
colors of paint. The store had their annual online sale resulting in the
following documents in their ``paint_inventory`` collection: 

.. code-block:: json

    { "_id": { "$oid": "606b4cfbcd83be7518b958da" }, "color": "red", "qty": 5 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958db" }, "color": "purple", "qty": 8 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958dc" }, "color": "blue", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958dd" }, "color": "white", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958de" }, "color": "yellow", "qty": 6 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958df" }, "color": "pink", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958e0" }, "color": "green", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958e1" }, "color": "black", "qty": 8 }

The store is restocking their items.  The first shipment that arrived
are ten cans of orange paint and we need to update this in the collection.

To update orange, query the ``paint_inventory`` collection where the
``color`` is ``"orange"``, set the update for ``qty`` to ``10``, set
``UpdateOptions.upsert()`` to ``true`` and pass the query to the
``updateOne()`` method: 

.. literalinclude:: /includes/fundamentals/code-snippets/InsertUpdate.java
   :language: java
   :dedent:
   :start-after: begin updateOneExample
   :end-before: end updateOneExample

The method returns:

.. code-block:: json   

    AcknowledgedUpdateResult{ matchedCount=0, modifiedCount=0, upsertedId=BsonObjectId{ value=606b4cfc1601f9443b5d6978 }} 

The following shows the documents in the ``paint_inventory`` collection:

.. code-block:: json   

    { "_id": { "$oid": "606b4cfbcd83be7518b958da" }, "color": "red", "qty": 5 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958db" }, "color": "purple", "qty": 8 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958dc" }, "color": "blue", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958dd" }, "color": "white", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958de" }, "color": "yellow", "qty": 6 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958df" }, "color": "pink", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958e0" }, "color": "green", "qty": 0 }
    { "_id": { "$oid": "606b4cfbcd83be7518b958e1" }, "color": "black", "qty": 8 }
    { "_id": { "$oid": "606b4cfc1601f9443b5d6978" }, "color": "orange", "qty": 10 }

.. note::

    Not including ``UpdateOptions`` results in no change to the collection.

    .. literalinclude:: /includes/fundamentals/code-snippets/InsertUpdate.java
        :language: java
        :dedent:
        :start-after: begin updateOneAttemptExample
        :end-before: end updateOneAttemptExample

    The method returns:

    .. code-block:: json  
    
        AcknowledgedUpdateResult{ matchedCount=0, modifiedCount=0, upsertedId=null }
