=================
Delete a Document
=================

.. default-domain:: mongodb

Overview
--------

You can remove documents by passing a query filter into the
:java-docs:`deleteOne() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#deleteOne(org.bson.conversions.Bson)>` 
or :java-docs:`deleteMany() </apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#deleteMany(org.bson.conversions.Bson)>` methods.

The ``deleteOne()`` method deletes a single document. If the query
filter matches more than one document, the method will remove the first
occurrence of a match in the collection. 

The ``deleteMany()`` method deletes all documents that match the query
filter.

Examples
--------

The following examples are about a paint store that sells eight different
colors of paint. The store had their annual online sale resulting in the
following documents in their ``paint_inventory`` collection: 

.. code-block:: json

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 2, "color": "purple", "qty": 8 }
    { "_id": 3, "color": "blue", "qty": 0 }
    { "_id": 4, "color": "white", "qty": 0 }
    { "_id": 5, "color": "yellow", "qty": 6 }
    { "_id": 6, "color": "pink", "qty": 0 }
    { "_id": 7, "color": "green", "qty": 0 }
    { "_id": 8, "color": "black", "qty": 8 }

Using ``deleteMany()``:
```````````````````````

All the paint colors in the collection are visible on their site. The
owner would like to change the site to show colors in stock (``qty`` is
not ``0``).  

To remove the colors out of stock, query the ``paint_inventory``
collection where the ``qty`` is ``0`` and pass the query to the
``deleteMany()`` method.

.. literalinclude:: /includes/fundamentals/code-snippets/Delete.java
   :language: java
   :dedent:
   :start-after: begin deleteManyExample
   :end-before: end deleteManyExample

The following shows the documents remaining in the ``paint_inventory``
collection: 

.. code-block:: json    

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 2, "color": "purple", "qty": 8 }
    { "_id": 5, "color": "yellow", "qty": 6 }
    { "_id": 8, "color": "black", "qty": 8 }

Using ``deleteOne()``:
``````````````````````

The store is donating the remaining quantity of their purple paint.
This means that the ``qty`` for purple is now ``0`` and we need to
remove purple from the collection. 

To remove purple, query the ``paint_inventory`` collection where the
``color`` is ``"purple"`` and pass the query to the ``deleteOne()``
method. 

.. literalinclude:: /includes/fundamentals/code-snippets/Delete.java
   :language: java
   :dedent:
   :start-after: begin deleteOneExample
   :end-before: end deleteOneExample

In this scenario, you can also query the ``paint_inventory`` collection
where the ``qty`` is ``8``.  This works because purple is the first
occurrence that matches the query filter. 

.. literalinclude:: /includes/fundamentals/code-snippets/Delete.java
   :language: java
   :dedent:
   :start-after: begin deleteOneEqExample
   :end-before: end deleteOneEqExample

The following shows the documents remaining in the ``paint_inventory``
collection:

.. code-block:: json   

    { "_id": 1, "color": "red", "qty": 5 }
    { "_id": 5, "color": "yellow", "qty": 6 }
    { "_id": 8, "color": "black", "qty": 8 }

See the following documentation for more information about the deleting
a document:

- :manual:`db.collection.deleteOne() </reference/method/db.collection.deleteMany/>`
- :manual:`db.collection.deleteMany() </reference/method/db.collection.deleteOne/>`
