===========================
Update Arrays in a Document
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you will learn how to match and update arrays in
a document.

Sample Document for Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following sections feature examples on how to update this sample
document: 

.. code-block:: json

    { "_id": 1, "color": "green", "qty": [8, 12, 18] }

The examples on this page use the ``findOneAndUpdate()`` method of the
``MongoCollection`` class to retrieve and update our document. Each
example uses an instance of ``FindOneAndUpdateOptions`` to configure the
method to return the document  after the update occurs. For more
information on the ``findOneAndUpdate()`` method, see our Compound
Operations guide <TODO>. 

Accessing Elements
------------------

To access elements in an array, use the **dot notation**. Dot notation is a
property access syntax for navigating JSON objects 

For example, to access the ``qty`` field in the sample document, use
``instock.qty``. 

For additional information, see the server manual entry on
:manual:`dot notation </core/document/#std-label-document-dot-notation>`.

Specifying an Update
--------------------

To specify an update, use an ``Updates`` builder. 

The ``Updates`` builder provides static utility methods to construct
update specifications. 

For more information on the ``Updates`` builder array methods, see our 
:doc:`guide on the Updates builder </fundamentals/builders/updates>`.

The following example performs these actions: 

- Create a filter to find where the sample document
- Use the ``push()`` method of the ``Updates`` builder to add "17" to the ``qty`` array

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin pushElementsExample
   :end-before: end pushElementsExample

The output of the above code should look like this:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [8, 12, 18, 17] }

Specifying an Array
-------------------

You can specify which array elements to update using a positional
operator. Positional operators can specify the first, all or certain
embedded arrays to update. 

The First Array Element
~~~~~~~~~~~~~~~~~~~~~~~

To update the first element that matches your query filter, use the
positional ``$`` operator. 

The positional ``$`` operator specifies the first element of the array
matched by your query filter and cannot reference an embedded array. If
you want to access an embedded array, use the :ref:`filtered positional operator <filtered_positional_operator>`. 

Example
```````

The following example performs these actions:

- Query for the position in ``qty`` where the value is "18"
- Decrement the value by "3"  using the ``inc()`` method of the ``Updates`` builder  
- Match and update the first value with a positional ``$`` operator 

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin updateValueExample
   :end-before: end updateValueExample

The output of the above code should look like this:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [8, 12, 15] }

For additional information on the operator and method mentioned in this
section, see the following resources: 

- :manual:`Positional $ Operator </reference/operator/update/positional>` Server Manual Entry
- :java-core-api:`inc() <com/mongodb/client/model/Updates.html#inc(java.lang.String,java.lang.Number)>` API Documentation

All Array Elements
~~~~~~~~~~~~~~~~~~

To update an element in each array, use the all positional ``$[]``
operator. 

Example
```````

The following example performs these actions: 

- Multiplies each value by "2"  using the ``mul()`` method of the ``Updates`` builder 
- Updates all elements in the ``qty`` array using an all positional operator

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin updateAllElementsExample
   :end-before: end updateAllElementsExample

The example above updates the original document to the following state:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [16, 24, 36] }

For additional information on the operator and method mentioned in this
section, see the following resources: 

- :manual:`Positional $[] Operator </reference/operator/update/positional-all/>` Server Manual Entry
- :java-core-api:`mul() <com/mongodb/client/model/Updates.html#mul(java.lang.String,java.lang.Number)>` API Documentation

.. _filtered_positional_operator:

Filtered Array Elements
~~~~~~~~~~~~~~~~~~~~~~~

To update embedded arrays in a document, use the filtered positional
``$[<identifier>]`` operator. You must include an array filter to
specify which embedded arrays to update.

The ``<identifier>`` is the placeholder value you give to represent an
element of the array field. This value must begin with a lowercase
letter and contain only alphanumeric characters.

Example
```````

The following example performs these actions:

- Set a ``UpdateOptions.arrayFilters`` condition to search for values less than "15" in the ``qty`` array
- Increment the value by "5"  using the ``inc()`` method of the ``Updates`` builder  
- Updates each value matched in the array using a filtered positional operator

.. literalinclude:: /includes/fundamentals/code-snippets/UpdateArray.java
   :language: java
   :dedent:
   :start-after: begin updateValueOptionsExample
   :end-before: end updateValueOptionsExample

The example above updates the original document to the following state:

.. code-block:: json
   :copyable: false

   { "_id": 1, "color": "green", "qty": [13, 17, 18] }

For additional information on the operator and method mentioned in this
section, see the following resources: 

- :manual:`Positional $[\<identifier\>] Operator </reference/operator/update/positional-filtered/>` Server Manual Entry
- :java-core-api:`inc() <com/mongodb/client/model/Updates.html#inc(java.lang.String,java.lang.Number)>` API Documentation
