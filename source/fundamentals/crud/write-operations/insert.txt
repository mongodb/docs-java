=================
Insert Operations
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

In this guide, you will learn how to insert documents into MongoDB. 

You can use MongoDB to retrieve, update and delete information. To
perform any of those operations, that information, such as user profiles
and orders, needs to exist in MongoDB. For that information to exist,
you need to first perform an insert operation.

An insert operation inserts a single or multiple documents in MongoDB
using the  ``insertOne()``, ``insertMany()`` and ``bulkWrite()``
methods. 

The following sections focus on ``insertOne()`` and
``insertMany()``. For information on how to use the ``bulkWrite()``
method, see our ``Bulk Operations <TODO>`` page. 

Insert a Single Document
------------------------

Use the ``insertOne()`` method when you want to insert a single
document. 

A document must contain a unique ``_id`` field. If you duplicate this
field with a document that exists, the insertion fails and a
``writeError`` occurs. If you omit the ``_id`` field, the driver
automatically generates a unique ``_id`` before inserting the document. 

A unique ``_id`` from the driver should look something like this:

.. code-block:: json
   :copyable: false

   "_id": { "$oid": "60905ef9865e2105ceb7f7b8" }
   
If the insertion is successful,  the method returns an 
``InsertOneResult`` instance representing the ``_id`` of the new
document. 

Example
~~~~~~~

The following example creates and inserts a document using the
``insertOne()`` method: 

.. literalinclude:: /includes/fundamentals/code-snippets/Insert.java
   :language: java
   :dedent:
   :start-after: begin insertOneExample
   :end-before: end insertOneExample

Your output should look something like this:

.. code-block:: json
   :copyable: false

   Inserted a document with the following id: 1

Insert Multiple Documents
-------------------------

Use the ``insertMany()`` method when you want to insert multiple
documents.  

Each document must contain a unique ``_id`` field. If you duplicate this
field with a document that exists, the insertion fails and a
``writeError`` occurs. If you omit the ``_id`` field, the driver
automatically generates a unique ``_id`` before inserting the document. 

A unique ``_id`` from the driver should look something like this:

.. code-block:: json
   :copyable: false

   "_id": { "$oid": "60905ef9865e2105ceb7f7b8" }
   
If the insertion is successful,  the method returns an
``InsertManyResult`` instance representing the ``_id`` of each new
document.

Example
~~~~~~~

The following example creates and adds two documents to a ``List`` , and
inserts the ``List`` using the ``insertMany()`` method: 

.. literalinclude:: /includes/fundamentals/code-snippets/Insert.java
   :language: java
   :dedent:
   :start-after: begin insertManyExample
   :end-before: end insertManyExample

Your output should look something like this:

.. code-block:: json
   :copyable: false

   Inserted documents with the following ids: [1, 2]  

Summary
-------

An insert operation is the first step you perform in MongoDB. After
performing this operation, you can perform other operations such as
retrieving, updating and deleting. 

There are three ways to perform an insert operation, but we focused on two:

- The ``insertOne()`` method inserts a single document.
- The ``insertMany()`` method inserts multiple documents.

For both methods, MongoDB expects all documents to have a unique ``_id``
field. If the field is not unique, the insertion fails and a
``writeError`` occurs. If you omit the field, the driver will
automatically generate a unique ``_id`` before inserting the document.

If the insertion is successful, both methods return an instance
representing the ``_id`` of each new document.

External Resources
------------------

For additional information on the classes and methods mentioned on this
page, see the following resources: 

API Documentation
~~~~~~~~~~~~~~~~~

- :java-sync-api:`insertOne() <com/mongodb/client/MongoCollection.html#insertOne(TDocument)>` 
- :java-sync-api:`insertMany() <com/mongodb/client/MongoCollection.html#insertMany>`
- :java-docs:`InsertOneResult <apidocs/mongodb-driver-core/com/mongodb/client/result/InsertOneResult.html>`
- :java-docs:`InsertManyResult <apidocs/mongodb-driver-core/com/mongodb/client/result/InsertManyResult.html>`

Further Explanation From Our Manual
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- :manual:`insertOne() </reference/method/db.collection.insertOne/>`
- :manual:`insertMany() </reference/method/db.collection.insertMany/>`

Runnable Examples
~~~~~~~~~~~~~~~~~

- :doc:`Insert a Document </usage-examples/insertOne>` 
- :doc:`Insert Multiple Documents </usage-examples/insertMany>`
