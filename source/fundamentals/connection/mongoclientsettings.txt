====================
MongoClient Settings
====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


Overview
--------

In this guide, you can learn how to configure your connections' behavior
in a ``MongoClient``.

You can configure your connections' behavior by specifying settings in your
``MongoClient``. You can specify the settings by creating and passing in a 
`MongoClientSettings <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.html>`__
object to the `MongoClients.create() <{+api+}/apidocs/mongodb-driver-sync/com/mongodb/client/MongoClients.html#create(com.mongodb.MongoClientSettings)>`__
method.

To create a ``MongoClientSettings`` object, use the
``MongoClientSettings.builder()`` method. The builder makes the
settings immutable and supports a simpler construction through chaining.
After chaining all the settings you want, use the ``build()`` method to
create the ``MongoClientSettings`` object.

Example
~~~~~~~

This example specifies the ``MongoClient`` to use the settings embedded
in the ``ConnectionString``:

.. literalinclude:: /includes/fundamentals/code-snippets/mcs.java
   :start-after: begin connectionString
   :end-before: end connectionString
   :language: java
   :emphasize-lines: 3
   :dedent:

For a full list of methods you can use to specify your ``MongoClient``
settings, see the `API Documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html>`__.

In your ``MongoClientSettings``, you can further specify your
connections' behavior by using the following settings:

- :ref:`Cluster Settings <mcs-cluster-settings>`
- :ref:`Socket Settings <mcs-socket-settings>`
- :ref:`Connection Pool Settings <mcs-connectionpool-settings>`
- :ref:`Server Settings <mcs-server-settings>`
- :ref:`SSL Settings <mcs-ssl-settings>`

The following sections describe the method to use and show an example on
how to configure your ``MongoClient`` for the preceding settings.

.. _mcs-cluster-settings:

Cluster Settings
----------------

Use the `applyToClusterSettings() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html#applyToClusterSettings(com.mongodb.Block)>`__
method to specify settings on how to connect to a MongoDB cluster. 

Example
~~~~~~~

This example specifies the following settings for the cluster:

- The selection to take at most five ``MILLISECONDS``
- To operate in a ``LOAD_BALANCED`` mode
- To use ``host1`` as the host on port ``27017``

.. literalinclude:: /includes/fundamentals/code-snippets/mcs.java
   :start-after: begin clusterSettings
   :end-before: end clusterSettings
   :language: java
   :emphasize-lines: 4-6
   :dedent:

For a full list of methods you can use to specify your cluster settings, see
the `API Documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/connection/ClusterSettings.Builder.html>`__.

.. _mcs-socket-settings:

Socket Settings
---------------

Use the `applyToSocketSettings() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html#applyToSocketSettings(com.mongodb.Block)>`__
method to specify settings on how to connect to a MongoDB server.

Example
~~~~~~~

This example specifies the following settings for the socket:

- The time to connect to take at most 1000 ``MILLISECONDS``
- The time to read from the socket to take at most 10 ``SECONDS``

.. literalinclude:: /includes/fundamentals/code-snippets/mcs.java
   :start-after: begin SocketSettings
   :end-before: end SocketSettings
   :language: java
   :emphasize-lines: 4-5
   :dedent:

For a full list of methods you can use to specify your socket settings, see
the `API Documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/connection/SocketSettings.Builder.html>`__.

.. _mcs-connectionpool-settings:

Connection Pool Settings
------------------------

Use the `applyToConnectionPoolSettings() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html#applyToConnectionPoolSettings(com.mongodb.Block)>`__
method to specify settings related to a pool of connections to a MongoDB server.

Example
~~~~~~~

This example specifies the following settings for the connection pool:

- The time for a thread to wait for an available connection to take at most five ``SECONDS``
- There should be at most one connection
- The time a pooled connection to live for to be at most 20 ``MILLISECONDS``

.. literalinclude:: /includes/fundamentals/code-snippets/mcs.java
   :start-after: begin ConnectionPoolSettings
   :end-before: end ConnectionPoolSettings
   :language: java
   :emphasize-lines: 4-6
   :dedent:

For a full list of methods you can use to specify your connection pool
settings, see the `API Documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/connection/ConnectionPoolSettings.Builder.html>`__.

.. _mcs-server-settings:

Server Settings
---------------

Use the `applyToServerSettings() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html#applyToServerSettings(com.mongodb.Block)>`__
method to specify settings on how to monitor each server.

Example
~~~~~~~

This example specifies the following settings for the server:

- The heartbeat frequency to be at least 10 ``MILLISECONDS``
- The cluster monitor to attempt reaching a server every three ``SECONDS``

.. literalinclude:: /includes/fundamentals/code-snippets/mcs.java
   :start-after: begin ServerSettings
   :end-before: end ServerSettings
   :language: java
   :emphasize-lines: 4-5
   :dedent:

For a full list of methods you can use to specify your server settings, see
the `API Documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/connection/ServerSettings.Builder.html>`__.

.. _mcs-ssl-settings:

SSL Settings
------------

Use the `applyToSslSettings() <{+api+}/apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html#applyToSslSettings(com.mongodb.Block)>`__
method to specify settings on how to securly connect to MongoDB using SSL.

Example
~~~~~~~

This example specifies the following settings to secure the connection using SSL:

- To enable SSL
- To not allow invalid host names

.. literalinclude:: /includes/fundamentals/code-snippets/mcs.java
   :start-after: begin SslSettings
   :end-before: end SslSettings
   :language: java
   :emphasize-lines: 4-5
   :dedent:

For a full list of methods you can use to specify your SSL settings, see the
`API Documentation <{+api+}/apidocs/mongodb-driver-core/com/mongodb/connection/SslSettings.Builder.html>`__.
