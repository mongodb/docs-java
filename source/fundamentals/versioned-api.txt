=============
Versioned API
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. note::

   The Versioned API feature requires MongoDB Server 5.0 or later.

   You should only use the Versioned API feature if all the MongoDB
   servers you are connecting to support this feature.

Overview
--------

In this guide, you can learn how to specify the **Versioned API** when connecting to
a MongoDB instance or replica set. You can use the Versioned API feature to
force the server to run operations with behavior compatible with the
specified **API version**. An API version defines the expected behavior of the
operations it covers and the format of server responses. If you change to
a different API version, the operations are not guaranteed to be
compatible and the server responses are not guaranteed to be similar.

When you use the Versioned API feature with an official MongoDB driver, you
can update your driver or server without worrying about backward compatibility
issues of the commands covered by the Versioned API.

See the server manual page on the `Versioned API <https://docs.mongodb.com/v5.0/reference/versioned-api/>`__
for more information including a list of commands it covers.

The following sections describe how you can enable the Versioned API for
your MongoDB client and the options that you can specify.

Enable the Versioned API on a MongoDB Client
--------------------------------------------

To enable the Versioned API, you must specify an API version in the settings
of your MongoDB client. Once you instantiate a ``MongoClient`` instance with
a specified API version, all commands you run with that client use that
version of the Versioned API.

.. tip::

   If you need to run commands using more than one version of the Versioned
   API, instantiate a separate client with that version.

   If you need to run commands not covered by the Versioned API, make sure the
   "strict" option is disabled. See the section on
   :ref:`Versioned API Options <versioned-api-options>` for more information.

The example below shows how you can instantiate a ``MongoClient`` that
sets the Versioned API version and connects to a server by performing the
following operations:

- Construct a ``ServerApi`` instance using the ``ServerApi.Builder``
  helper class.
- Specify a Versioned API version using a constant from the
  ``ServerApiVersion`` class.
- Construct a ``MongoClientSettings`` instance using the
  ``MongoClientSettings.Builder`` class.
- Specify a server to connect to using a ``ServerAddress`` instance.
- Instantiate a ``MongoClient`` using the ``MongoClients.create()`` method
  and pass your ``MongoClientSettings`` instance as a parameter.

.. literalinclude:: /includes/fundamentals/code-snippets/VersionedApiExample.java
   :start-after: start serverAPIVersion
   :end-before: end serverAPIVersion
   :language: java
   :dedent:

.. warning::

   If you specify an API version and connect to a MongoDB server that does
   not support the Versioned API, your application may raise an exception when
   executing a command on your MongoDB server. If you use a ``MongoClient``
   that specifies the API version to query a server that does not support it,
   your query could fail with an exception message that includes the
   following text:

   .. code-block:: none
      :copyable: false

      'Unrecognized field 'apiVersion' on server...

For more information on the methods and classes referenced in this
section, see the following API Documentation:

- :java-docs:`ServerApi <apidocs/mongodb-driver-core/com/mongodb/ServerApi.html>`
- :java-docs:`ServerApi.Builder <apidocs/mongodb-driver-core/com/mongodb/ServerApi.Builder.html>`
- :java-docs:`ServerApiVersion <apidocs/mongodb-driver-core/com/mongodb/ServerApiVersion.html>`
- :java-docs:`ServerAddress <apidocs/mongodb-driver-core/com/mongodb/ServerAddress.html>`
- :java-docs:`MongoClientSettings <apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.html>`
- :java-docs:`MongoClientSettings.Builder <apidocs/mongodb-driver-core/com/mongodb/MongoClientSettings.Builder.html>`
- :java-docs:`MongoClients.create() <apidocs/mongodb-driver-sync/com/mongodb/client/MongoClients.html#create(com.mongodb.MongoClientSettings)>`
- :java-docs:`MongoClient <apidocs/mongodb-driver-sync/com/mongodb/client/MongoClient.html>`

.. _versioned-api-options:

Versioned API Options
---------------------

You can enable or disable optional behavior related to the Versioned API as
described in the following table.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 25,75

   * - Option Name
     - Description

   * - Strict
     - | **Optional**. When set, if you call a command that is not part of the declared API version, the driver raises an exception.
       |
       | Default: **false**

   * -  DeprecationErrors
     - | **Optional**. When set, if you call a command that is deprecated in the declared API version, the driver raises an exception.
       |
       | Default: **false**

The following example shows how you can set the two options on an instance
of ``ServerApi`` by chaining methods on the ``ServerApi.Builder``:

.. literalinclude:: /includes/fundamentals/code-snippets/VersionedApiExample.java
   :start-after: start apiVersionOptions
   :end-before: end apiVersionOptions
   :language: java
   :dedent:

For more information on the options in this section, see the following
API Documentation: 

- :java-docs:`strict() <apidocs/mongodb-driver-core/com/mongodb/ServerApi.Builder.html#strict(boolean)>`
- :java-docs:`deprecationErrors() <apidocs/mongodb-driver-core/com/mongodb/ServerApi.Builder.html#>`

